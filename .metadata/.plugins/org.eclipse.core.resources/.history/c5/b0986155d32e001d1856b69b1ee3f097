package com.daicent;

import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;

/*
 * 1. Set là một interface kế thừa Collection interface trong java. 
 * 2. Một Collection không thể chứa các phần tử trùng lặp.
 *- HashSet lưu trữ các phần tử của nó trong bảng băm, 
 *là cách thực hiện tốt nhất, 
 *tuy nhiên nó không đảm bảo về thứ tự các phần tử được chèn vào.
 *- TreeSet lưu trữ các phần tử của nó trong một cây, 
 *sắp xếp các phần tử của nó dựa trên các giá trị của chúng, 
 *về cơ bản là chậm hơn HashSet.
 *- LinkedHashSet được triển khai dưới dạng bảng băm 
 *với có cấu trúc dữ liệu danh sách liên kết, 
 *sắp xếp các phần tử của nó dựa trên thứ tự chúng 
 *được chèn vào tập hợp (thứ tự chèn).
 *- EnumSet là một cài đặt chuyên biệt để sử dụng với các kiểu enum.
 */
public class SetColection {
	public static void main(String[] args) {
		// Khởi tạo setHashSet là HashSet
		Set<String> setHashSet = new HashSet<String>();
		setHashSet.add("trần");
		setHashSet.add("thị");
		setHashSet.add("như");
		setHashSet.add("trang");
		System.out.println("Số phần tử của setHashSet: " + setHashSet.size());
		System.out.println("Các phần tử của setHashSet: " + setHashSet);
		System.out.println("setHashSet có chứa 'trang' không? " + setHashSet.contains("trang"));
		System.out.println("setHashSet có chứa 'ốc' không? " + setHashSet.contains("ốc"));

		// Khởi tạo setTreeSet là TreeSet
		Set<String> setTreeSet = new TreeSet<String>();
		setTreeSet.add("trần");
		setTreeSet.add("thị");
		setTreeSet.add("như");
		setTreeSet.add("trang");
		System.out.println("Số phần tử của setTreeSet: " + setTreeSet.size());
		System.out.println("Các phần tử của setTreeSet: " + setTreeSet);
		System.out.println("setTreeSet có chứa 'trang' không? " + setTreeSet.contains("trang"));
		System.out.println("setTreeSet có chứa 'ốc' không? " + setTreeSet.contains("ốc"));

	}
}
